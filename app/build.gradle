apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'
apply plugin: 'jacoco'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        multiDexEnabled true
        testInstrumentationRunnerArguments
        aaptOptions.cruncherEnabled = false
        applicationId "com.meuus90.daumbooksearch"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0.0"
        ndk.abiFilters 'x86', 'x86_64', 'armeabi', 'armeabi-v7a', 'mips', 'mips64', 'arm64-v8a'
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${variant.name}-${variant.versionCode}-${variant.versionName}.apk"
        }
    }

    buildTypes {
        debug {
            lintOptions.checkReleaseBuilds false

            initWith debug
            jniDebuggable true
            minifyEnabled false
            shrinkResources false
            testCoverageEnabled !project.hasProperty('android.injected.invoked.from.ide')
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            lintOptions.checkReleaseBuilds false

            initWith release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDir sharedTestDir
        }
        main {
            assets.srcDirs = ['src/main/res/raw']
        }

        androidTest.kotlin.srcDirs += "src/test-common/kotlin"
        test.kotlin.srcDirs += "src/test-common/kotlin"
        main.java.srcDirs += 'src/main/kotlin'
    }

    flavorDimensions "default"

    productFlavors {
        prod {
            dimension "default"
            manifestPlaceholders = [appNameGradle: "@string/app_name"]
            manifestPlaceholders = [appLabel: "@string/app_name"]

            buildConfigField "String", "daumApiServer", "\"https://dapi.kakao.com/\""
            buildConfigField "String", "daumApiKey", "\"asdasd\""
        }

        dev {
            dimension "default"
            applicationIdSuffix = ".dev"
            manifestPlaceholders = [appNameGradle: "@string/app_name"]
            manifestPlaceholders = [appLabel: "@string/app_name"]

            buildConfigField "String", "daumApiServer", "\"https://dapi.kakao.com/\""
            buildConfigField "String", "daumApiKey", "\"asdasd\""
        }
    }

    splits {
        abi {
            enable true
            reset()
            include 'x86', 'x86_64', 'armeabi', 'armeabi-v7a', 'mips', 'mips64', 'arm64-v8a'
            universalApk true
        }
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true

            all {
                useJUnitPlatform()

                testLogging {
                    events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
                }
            }
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8

        kotlinOptions {
            suppressWarnings = true
            jvmTarget = '1.8'
            jvmTarget = JavaVersion.VERSION_1_8
            apiVersion = '1.4'
            languageVersion = '1.4'
        }
    }

    compileOptions {
        // Flag to enable support for the new language APIs
        // Sets Java compatibility to Java 8
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    testImplementation "junit:junit:$junit_version"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"
    androidTestImplementation "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:$junit_vintage_version"

    androidTestImplementation "de.mannodermaus.junit5:android-test-core:$mannodermaus_junit5_version"
    androidTestRuntimeOnly "de.mannodermaus.junit5:android-test-runner:$mannodermaus_junit5_version"

    androidTestImplementation "androidx.test:core:$androidx_test_version"
    androidTestImplementation "androidx.test:runner:$androidx_test_version"
    androidTestImplementation "androidx.test:rules:$androidx_test_version"
    androidTestImplementation "androidx.test.ext:junit:$androidx_junit_version"
    androidTestImplementation 'com.google.truth:truth:1.0'
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidx_espresso_version"

    implementation "androidx.core:core-ktx:$androidx_core_ktx_version"
    implementation "androidx.appcompat:appcompat:$androidx_appcompat_version"
    implementation "androidx.recyclerview:recyclerview:$androidx_version"
    implementation "androidx.cardview:cardview:$androidx_cardview_version"
    implementation "androidx.browser:browser:$androidx_browser_version"
    implementation "androidx.annotation:annotation:$androidx_version"
    implementation "androidx.multidex:multidex:$androidx_multidex_version"
    implementation "androidx.constraintlayout:constraintlayout:$androidx_constraint_layout_version"

    implementation "androidx.lifecycle:lifecycle-viewmodel:$arch_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata:$arch_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$arch_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$arch_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime:$arch_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$arch_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$arch_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$arch_lifecycle_version"

    implementation "androidx.room:room-runtime:$arch_room_version"
    implementation "androidx.room:room-ktx:$arch_room_version"
    annotationProcessor "androidx.room:room-compiler:$arch_room_version"
    kapt "androidx.room:room-compiler:$arch_room_version"

    implementation "androidx.work:work-runtime-ktx:$arch_workmanager_version"
    implementation "androidx.work:work-rxjava2:$arch_workmanager_version"
    implementation "androidx.work:work-gcm:$arch_workmanager_version"

    implementation "androidx.paging:paging-runtime:$arch_paging_runtime_version"

    testImplementation "androidx.arch.core:core-testing:$arch_core_testing_version"
    testImplementation "androidx.room:room-testing:$arch_room_version"

    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    implementation "com.google.android.material:material:$design_support_version"

    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"

    implementation "com.squareup.okhttp3:okhttp:$okhttp3_version"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:$okhttp3_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3_version"

    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation "com.github.bumptech.glide:annotations:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    implementation "com.jakewharton.timber:timber:$timber_version"
    implementation "com.orhanobut:logger:$logger_version"
}